<?php

namespace {{ namespace }}\Api\Common;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller as Controller;


/**
 * A BaseController for routing.
 *
 * @author Aung Khant
 * @copyright MIT
 */
class BaseController extends Controller
{
    public function responseSuccess($params, $result, $message = null)
    {
    	$response = [
            'code'    => '200',
            'status'  => 'success',
            'message' => $message
        ];

        if (isset($params['page']) && isset($params['row_count'])) {
            $inputs['page']   = $params['page'];
            $inputs['row_count'] = $params['row_count'];
            $inputs['total_records_count'] = $result['total'];
            $response['pagination'] = $inputs;
        }

        //for index
        if(isset($result['data'])){
            $response['data'] = $result['data'];
        }else{
            //for created
            if($result && $params){
                $created['id'] = $result;                       
                $response['data'] = array_merge($params, $created);
            }else{
                 $response['data'] = $result;
            }
        }
        
        return response()->json($response, 200);
     
    }

    public function responseError($error, $errorMessages = [], $code = 404)
    {
        $response = [
            'code'    => 400,
            'success' => 'failed',
            'message' => $error,
        ];

        if (!empty($errorMessages)) {
            $response['data'] = $errorMessages;
        }

        return response()->json($response, $code);
    }



    /**
    * Transform array to object validation errors
    * 
    * @param  mixed $errors
    * @return object
    */
    public function getErrorObject($errors)
    {
        return collect($errors)
                ->map(fn($error) => $error[0]);
    }
}
